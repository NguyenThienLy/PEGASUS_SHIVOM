{"version":3,"file":"static/webpack/static/development/pages/home/home.js.733b1a9d8c619c593a00.hot-update.js","sources":["webpack:///./services/crud.js"],"sourcesContent":["import 'isomorphic-unfetch' \nimport { environment } from '../environments'\nimport * as _ from 'lodash'\n\nimport { URL, URLSearchParams } from 'url'\n\nexport class CrudApi {\n    constructor(subpath) {\n        this.subpath = subpath\n    }\n    _paserQuery(query = {}) {\n        let parsedQuery = _.merge({}, query)\n        if (query.filter) {\n            parsedQuery.filter = JSON.stringify(query.filter);\n        }\n        if (query.order) {\n            parsedQuery.order = JSON.stringify(query.order);\n        }\n        if (query.scopes) {\n            parsedQuery.scopes = JSON.stringify(query.scopes);\n        }\n        if (query.fields) {\n            parsedQuery.fields = JSON.stringify(query.fields);\n        }\n        if (query.items) {\n            parsedQuery.items = JSON.stringify(query.items);\n        }\n        if (query.populates) {\n            parsedQuery.populates = JSON.stringify(query.populates)\n        }\n        if(query.limit) {\n            parsedQuery.limit = JSON.stringify(query.limit)\n        }\n        if(query.offset){\n            parsedQuery.offset = JSON.stringify(query.offset)\n        }\n        return parsedQuery;\n    }\n    baseUrl(path = \"\") {\n        //return `${environment.production.host}/api/${environment.production.version}/${this.subpath}/${path}`\n        return \"https://pntravel.herokuapp.com/api/v1/post\"\n    }\n    async exec(url, options) {\n        try {\n            return await fetch(url, options).then(result => { return result.json() })\n        } catch (err) {\n            console.log(\"Request err: \", err)\n        }\n    }\n    async getList(option = {}) {\n        const url = new URL(this.baseUrl())\n        option.query = {\n            limit: 2\n        }\n        url.search = new URLSearchParams(this._paserQuery(option.query))\n        console.log(\"url: \", url)\n        const options = {\n            method: \"GET\",\n            headers: _.merge({\n                'User-Agent': 'Request-Promise',\n                'Content-Type':\"Application/json\"\n            }, option.headers)\n        }\n        return await this.exec(url.href, options)\n    }\n    async getItem(id, option = {}) {\n        const options = {\n            method: \"GET\"\n        }\n        return await this.exec(this.baseUrl(id), options)\n    }\n    async delete() {\n\n    }\n    async deleteAll() {\n\n    }\n    async update() {\n\n    }\n    async test() {\n        const options = {\n            uri: \"https://pntravel.herokuapp.com/api/v1/post\",\n            method: \"GET\"\n        }\n        const res = await Request(options)\n        console.log(\"res: \", res)\n        return res\n    }\n\n\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAJA;AAAA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AA/BA;AAAA;AAAA;AAgCA;AACA;AACA;AACA;AAnCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsCA;AAAA;AACA;AAvCA;AAAA;AACA;AADA;AAAA;AAAA;AAwCA;AACA;AAzCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2CA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAlDA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2DA;AACA;AACA;AADA;AA5DA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2EA;AACA;AACA;AAFA;AA3EA;AAAA;AACA;AADA;AA+EA;AACA;AAhFA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;;;;A","sourceRoot":""}